apiVersion: {{ include "common.capabilities.deployment.apiVersion" . }}
kind: Deployment
metadata:
  name: {{ include "zimagi.scheduler.fullname" . }}
  namespace: {{ .Release.Namespace | quote }}
  labels: {{- include "common.labels.standard" . | nindent 4 }}
    app.kubernetes.io/component: scheduler
spec:
  replicas: {{ .Values.scheduler.replicaCount }}
  {{- if .Values.scheduler.updateStrategy }}
  strategy: {{- toYaml .Values.scheduler.updateStrategy | nindent 4 }}
  {{- end }}
  selector:
    matchLabels: {{- include "common.labels.matchLabels" . | nindent 6 }}
      app.kubernetes.io/component: scheduler
  template:
    metadata:
      labels: {{- include "common.labels.standard" . | nindent 8 }}
        app.kubernetes.io/component: scheduler
    spec:
      serviceAccountName: {{ template "zimagi.scheduler.serviceAccountName" . }}
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if .Values.scheduler.affinity }}
      affinity: {{- include "common.tplvalues.render" ( dict "value" .Values.scheduler.affinity "context" $) | nindent 8 }}
      {{- else }}
      affinity:
        podAffinity: {{- include "common.affinities.pods" (dict "type" .Values.scheduler.podAffinityPreset "component" "scheduler" "context" $) | nindent 10 }}
        podAntiAffinity: {{- include "common.affinities.pods" (dict "type" .Values.scheduler.podAntiAffinityPreset "component" "scheduler" "context" $) | nindent 10 }}
        nodeAffinity: {{- include "common.affinities.nodes" (dict "type" .Values.scheduler.nodeAffinityPreset.type "key" .Values.scheduler.nodeAffinityPreset.key "values" .Values.scheduler.nodeAffinityPreset.values) | nindent 10 }}
      {{- end }}
      {{- if .Values.scheduler.nodeSelector }}
      nodeSelector: {{- include "common.tplvalues.render" ( dict "value" .Values.scheduler.nodeSelector "context" $) | nindent 8 }}
      {{- end }}
      {{- if .Values.scheduler.tolerations }}
      tolerations: {{- include "common.tplvalues.render" (dict "value" .Values.scheduler.tolerations "context" $) | nindent 8 }}
      {{- end }}
      {{- if .Values.scheduler.priorityClassName }}
      priorityClassName: {{ .Values.scheduler.priorityClassName | quote }}
      {{- end }}
      {{- if .Values.scheduler.podSecurityContext.enabled }}
      securityContext: {{- omit .Values.scheduler.podSecurityContext "enabled" | toYaml | nindent 8 }}
      {{- end }}
      containers:
        - name: scheduler
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          {{- if .Values.scheduler.containerSecurityContext.enabled }}
          securityContext: {{- omit .Values.scheduler.containerSecurityContext "enabled" | toYaml | nindent 12 }}
          {{- end }}
          {{- if .Values.scheduler.resources }}
          resources: {{- toYaml .Values.scheduler.resources | nindent 12 }}
          {{- end }}
          command:
            - zimagi-scheduler
          env:
            {{- if .Values.postgresql.enabled }}
            - name: ZIMAGI_POSTGRES_HOST
              value: {{ include "zimagi.postgresql.fullname" . | quote }}
            - name: ZIMAGI_POSTGRES_PORT
              value: "5432"
            {{- else }}
            - name: ZIMAGI_POSTGRES_HOST
              value: {{ .Values.postgresqlService.host | quote }}
            - name: ZIMAGI_POSTGRES_PORT
              value: {{ .Values.postgresqlService.port | quote }}
            {{- end }}
            - name: ZIMAGI_POSTGRES_DB
              value: {{ .Values.postgresql.auth.database | quote }}
            - name: ZIMAGI_POSTGRES_USER
              value: {{ .Values.postgresql.auth.username | quote }}
            - name: ZIMAGI_POSTGRES_PASSWORD
              value: {{ .Values.postgresql.auth.password | quote }}
            {{- if .Values.redis.enabled }}
            - name: ZIMAGI_REDIS_HOST
              value: {{ include "zimagi.redisMaster.fullname" . | quote }}
            - name: ZIMAGI_REDIS_PORT
              value: "6379"
            {{- else }}
            - name: ZIMAGI_REDIS_HOST
              value: {{ .Values.redisService.host | quote }}
            - name: ZIMAGI_REDIS_PORT
              value: {{ .Values.redisService.port | quote }}
            {{- end }}
            - name: ZIMAGI_REDIS_PASSWORD
              value: {{ .Values.redis.auth.password | quote }}
            {{- if .Values.scheduler.extraEnv }}
            {{- include "common.tplvalues.render" (dict "value" .Values.scheduler.extraEnv "context" $) | nindent 12 }}
            {{- end }}
          envFrom:
            {{- if .Values.scheduler.extraEnvVarsCM }}
            - configMapRef:
                name: {{ include "common.tplvalues.render" (dict "value" .Values.scheduler.extraEnvVarsCM "context" $) }}
            {{- end }}
            {{- if .Values.scheduler.extraEnvVarsSecret }}
            - secretRef:
                name: {{ include "common.tplvalues.render" (dict "value" .Values.scheduler.extraEnvVarsSecret "context" $) }}
            {{- end }}
          volumeMounts:
          - mountPath: "/usr/local/lib/zimagi"
            name: {{ include "zimagi.pvc.fullname" . }}
      volumes:
        {{- if not .Values.persistence.existingClaim }}
        - name: {{ include "zimagi.pvc.fullname" . }}
          persistentVolumeClaim:
            claimName: {{ include "zimagi.pvc.fullname" . }}
        {{- else }}
        - name: {{ include "zimagi.pvc.fullname" . }}
          persistentVolumeClaim:
            claimName: {{ .Values.persistence.existingClaim }}
        {{- end }}
