nameOverride: ''

imagePullSecrets: []
image:
  pullPolicy: IfNotPresent
  repository: zimagi/zimagi
  tag: 0.11.14

persistence:
  enabled: false
  accessMode: ReadWriteOnce
  size: 10Gi

commonAnnotations: {}
commonLabels: {}

postgresql:
  enabled: false
  nameOverride: ''
  auth:
    database: zimagi
    username: zimagi
    password: zimagi
  primary:
    persistence:
      enabled: true

postgresqlService:
  host: localhost
  port: 5432

redis:
  enabled: false
  nameOverride: ''
  auth:
    password: zimagi

redisService:
  host: localhost
  port: 6379

service:
  commandApi:
    type: ClusterIP
    tlsPort: 443
    containerPort: 5000
    tlsNodePort: null

  dataApi:
    type: ClusterIP
    tlsPort: 443
    containerPort: 5000
    tlsNodePort: null

scheduler:
  serviceAccount:
    create: true
    name: zimagi-scheduler

  psp:
    create: true
  containerSecurityContext:
    enabled: true
    privileged: false
  podSecurityContext:
    enabled: true
    fsGroup: 1001

  replicaCount: 2
  updateStrategy:
    type: RollingUpdate

  affinity: {}
  podAffinityPreset: ''
  podAntiAffinityPreset: soft
  nodeAffinityPreset:
    key: ''
    type: ''
    values: []

  priorityClassName: ''
  nodeSelector: {}
  tolerations: []

  resources:
    limits: {}
    requests: {}

  extraEnv: []
  extraEnvVarsCM: {}
  extraEnvVarsSecret: {}

commandApi:
  serviceAccount:
    create: true
    name: zimagi-command

  psp:
    create: true
  containerSecurityContext:
    enabled: true
    privileged: false
  podSecurityContext:
    enabled: true
    fsGroup: 1001

  replicaCount: 1
  updateStrategy:
    type: RollingUpdate

  affinity: {}
  podAffinityPreset: ''
  podAntiAffinityPreset: soft
  nodeAffinityPreset:
    key: ''
    type: ''
    values: []

  priorityClassName: ''
  nodeSelector: {}
  tolerations: []

  resources:
    limits: {}
    requests: {}

  containerPort: 5000
  livenessProbe:
    type: HTTPS
    failureThreshold: 1
    initialDelaySeconds: 60
    periodSeconds: 5
    successThreshold: 1
    timeoutSeconds: 3
  readinessProbe:
    type: HTTPS
    failureThreshold: 1
    initialDelaySeconds: 90
    periodSeconds: 10
    successThreshold: 1
    timeoutSeconds: 3

  extraEnvVarsCM: []
  extraEnvVarsSecret: []

  autoscaling:
    enabled: true
    minReplicas: 1
    maxReplicas: 4
    averageUtilization: 70

  ingress:
    enabled: false
    className: ''
    annotations: {}
    hostname: ''
    extraHosts: []
    path: /
    pathType: ImplementationSpecific
    extraPaths: []
    tls: false
    certManager: false
    selfSigned: false
    extraTls: {}

dataApi:
  serviceAccount:
    create: true
    name: zimagi-data

  psp:
    create: true
  containerSecurityContext:
    enabled: true
    privileged: false
  podSecurityContext:
    enabled: true
    fsGroup: 1001

  replicaCount: 1
  updateStrategy:
    type: RollingUpdate

  affinity: {}
  podAffinityPreset: ''
  podAntiAffinityPreset: soft
  nodeAffinityPreset:
    key: ''
    type: ''
    values: []

  priorityClassName: ''
  nodeSelector: {}
  tolerations: []

  resources:
    limits: {}
    requests: {}

  containerPort: 5000
  livenessProbe:
    type: HTTPS
    failureThreshold: 1
    initialDelaySeconds: 60
    periodSeconds: 5
    successThreshold: 1
    timeoutSeconds: 3
  readinessProbe:
    type: HTTPS
    failureThreshold: 1
    initialDelaySeconds: 90
    periodSeconds: 10
    successThreshold: 1
    timeoutSeconds: 3

  extraEnvVarsCM: []
  extraEnvVarsSecret: []

  autoscaling:
    enabled: true
    minReplicas: 1
    maxReplicas: 4
    averageUtilization: 70

  ingress:
    enabled: false
    className: ''
    annotations: {}
    hostname: ''
    extraHosts: []
    path: /
    pathType: ImplementationSpecific
    extraPaths: []
    tls: false
    certManager: false
    selfSigned: false
    extraTls: {}

worker:
  serviceAccount:
    create: true
    name: zimagi-worker

  psp:
    create: true
  containerSecurityContext:
    enabled: true
    privileged: false
  podSecurityContext:
    enabled: true
    fsGroup: 1001

  replicaCount: 1
  updateStrategy:
    type: RollingUpdate

  affinity: {}
  podAffinityPreset: ''
  podAntiAffinityPreset: soft
  nodeAffinityPreset:
    key: ''
    type: ''
    values: []

  priorityClassName: ''
  nodeSelector:
    zimagi: worker
  tolerations: []

  resources:
    limits: {}
    requests: {}

  extraEnvVarsCM: []
  extraEnvVarsSecret: []

  autoscaling:
    enabled: true
    minReplicas: 1
    maxReplicas: 4
    averageUtilization: 70
