commandApi:
  affinity: {}
  args: []
  autoscaling:
    averageUtilization: 70
    enabled: false
    maxReplicas: 4
    minReplicas: 1
  containerPort: 5123
  containerSecurityContext:
    enabled: false
    privileged: true
    runAsUser: 0
  extraEnv: []
  extraEnvVarsCM: {}
  extraEnvVarsSecret: {}
  extraVolumeMounts: {}
  extraVolumes: {}
  livenessProbe:
    enabled: true
    failureThreshold: 1
    initialDelaySeconds: 10
    periodSeconds: 15
    successThreshold: 1
    timeoutSeconds: 3
  nodeAffinityPreset:
    key: ''
    type: ''
    values: []
  nodeSelector: {}
  podAffinityPreset: ''
  podAntiAffinityPreset: soft
  podSecurityContext:
    enabled: false
    fsGroup: 1001
  priorityClassName: ''
  psp:
    create: false
  rbac:
    create: true
  readinessProbe:
    enabled: true
    failureThreshold: 1
    initialDelaySeconds: 10
    periodSeconds: 15
    successThreshold: 1
    timeoutSeconds: 3
  replicaCount: 1
  resources:
    limits: {}
    requests: {}
  serviceAccount:
    create: true
    name: ''
  tolerations: []
  updateStrategy:
    type: RollingUpdate
dataApi:
  affinity: {}
  args: []
  autoscaling:
    averageUtilization: 70
    enabled: false
    maxReplicas: 4
    minReplicas: 1
  containerPort: 5323
  containerSecurityContext:
    enabled: false
    privileged: true
    runAsUser: 0
  extraEnv: []
  extraEnvVarsCM: {}
  extraEnvVarsSecret: {}
  extraVolumeMounts: {}
  extraVolumes: {}
  livenessProbe:
    enabled: true
    failureThreshold: 1
    initialDelaySeconds: 10
    periodSeconds: 15
    successThreshold: 1
    timeoutSeconds: 3
  nodeAffinityPreset:
    key: ''
    type: ''
    values: []
  nodeSelector: {}
  podAffinityPreset: ''
  podAntiAffinityPreset: soft
  podSecurityContext:
    enabled: false
    fsGroup: 1001
  priorityClassName: ''
  psp:
    create: false
  rbac:
    create: true
  readinessProbe:
    enabled: true
    failureThreshold: 1
    initialDelaySeconds: 10
    periodSeconds: 15
    successThreshold: 1
    timeoutSeconds: 3
  replicaCount: 1
  resources:
    limits: {}
    requests: {}
  serviceAccount:
    create: true
    name: ''
  tolerations: []
  updateStrategy:
    type: RollingUpdate
image:
  pullPolicy: IfNotPresent
  repository: zimagi/zimagi
  tag: 0.7.1
imagePullSecrets: []
ingress:
  annotations: {}
  enabled: false
  hostName: ''
  http:
    path: ''
    servicePort: 80
nameOverride: ''
nodeSelector: {}
podAnnotations: {}
podSecurityContext: {}
postgres: {}
postgresql:
  enabled: true
  persistence:
    enabled: false
  postgresqlDatabase: zimagi
  postgresqlPassword: zimagi
  postgresqlUsername: zimagi
redis:
  auth:
    password: zimagi
replicaCount: 1
resources: {}
scheduler:
  affinity: {}
  args: []
  autoscaling:
    averageUtilization: 70
    enabled: false
    maxReplicas: 4
    minReplicas: 1
  containerSecurityContext:
    enabled: false
    privileged: true
    runAsUser: 0
  extraEnv: []
  extraEnvVarsCM: {}
  extraEnvVarsSecret: {}
  extraVolumeMounts: {}
  extraVolumes: {}
  livenessProbe:
    enabled: true
    failureThreshold: 1
    initialDelaySeconds: 10
    periodSeconds: 15
    successThreshold: 1
    timeoutSeconds: 3
  nodeAffinityPreset:
    key: ''
    type: ''
    values: []
  nodeSelector: {}
  podAffinityPreset: ''
  podAntiAffinityPreset: soft
  podSecurityContext:
    enabled: false
    fsGroup: 1001
  priorityClassName: ''
  psp:
    create: false
  rbac:
    create: true
  readinessProbe:
    enabled: true
    failureThreshold: 1
    initialDelaySeconds: 10
    periodSeconds: 15
    successThreshold: 1
    timeoutSeconds: 3
  replicaCount: 1
  resources:
    limits: {}
    requests: {}
  serviceAccount:
    create: true
    name: ''
  tolerations: []
  updateStrategy:
    type: RollingUpdate
securityContext: {}
service:
  commandApi:
    containerPort: 5123
    nodePort: null
    port: 80
    tlsNodePort: null
    tlsPort: 443
    type: ClusterIP
  dataApi:
    containerPort: 5323
    nodePort: null
    port: 80
    tlsNodePort: null
    tlsPort: 443
    type: ClusterIP
worker:
  affinity: {}
  args: []
  autoscaling:
    averageUtilization: 70
    enabled: false
    maxReplicas: 4
    minReplicas: 1
  containerPort: 8080
  containerSecurityContext:
    enabled: false
    privileged: true
    runAsUser: 0
  extraEnv: []
  extraEnvVarsCM: {}
  extraEnvVarsSecret: {}
  extraVolumeMounts: {}
  extraVolumes: {}
  livenessProbe:
    enabled: false
    failureThreshold: 1
    initialDelaySeconds: 10
    periodSeconds: 15
    successThreshold: 1
    timeoutSeconds: 3
  nodeAffinityPreset:
    key: ''
    type: ''
    values: []
  nodeSelector:
    zimagi: worker
  podAffinityPreset: ''
  podAntiAffinityPreset: soft
  podSecurityContext:
    enabled: false
    fsGroup: 1001
  priorityClassName: ''
  psp:
    create: false
  rbac:
    create: true
  readinessProbe:
    enabled: false
    failureThreshold: 1
    initialDelaySeconds: 10
    periodSeconds: 15
    successThreshold: 1
    timeoutSeconds: 3
  replicaCount: 0
  resources:
    limits: {}
    requests: {}
  serviceAccount:
    create: true
    name: ''
  tolerations: []
  updateStrategy:
    type: RollingUpdate
