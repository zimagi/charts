{{/*
Generate ingress entrypoints
*/}}
{{- define "zimagi-lib.ingress" -}}
{{- $root := (index . 0) -}}
{{- $service := (index . 1) -}}
{{- $app_service := ($service.service | default (dict )) -}}
{{- $app_ingress := ($service.ingress | default (dict )) -}}
{{- if and $app_service.enabled $app_ingress.enabled }}
---
apiVersion: {{ include "common.capabilities.ingress.apiVersion" $root }}
kind: Ingress
{{- $name := include "zimagi-lib.serviceName" (list $root $service) }}
{{ include "zimagi-lib.metadata" (list $root $service $name) }}
spec:
  {{- $spec := merge $app_ingress $root.Values.ingress -}}
  {{- if and $spec.className (eq "true" (include "common.ingress.supportsIngressClassname" $root)) }}
  ingressClassName: {{ $spec.className | quote }}
  {{- end }}
  {{- if $spec.tls }}
  tls:
    {{- range $cert := $spec.tls }}
    - hosts:
        {{- if $cert.hosts -}}
        {{- range $host := $cert.hosts }}
        - {{ $host | quote }}
        {{- end }}
        {{- else -}}
        {{- range $host := $spec.hosts }}
        - {{ $host.host | quote }}
        {{- end }}
        {{- end }}
      secretName: {{ $cert.secretName | quote }}
    {{- end }}
  {{- end }}
  rules:
    {{- range $host := $spec.hosts }}
    - host: {{ $host.host | quote }}
      http:
        paths:
          {{- $paths := $host.paths | default (list (dict "path" "/")) -}}
          {{- range $path := $paths }}
          - path: {{ $path.path | quote }}
            pathType: {{ $path.type | default "ImplementationSpecific" | quote }}
            backend:
              {{- $service_port := coalesce $app_service.port $root.Values.service.port }}
              service:
                name: {{ $name | quote }}
                port:
                  number: {{ $service_port }}
          {{- end }}
    {{- end }}
{{- end -}}
{{- end -}}
