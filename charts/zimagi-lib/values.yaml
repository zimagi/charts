labels: {}
annotations: {}

image:
  pullSecrets: []
  pullPolicy: IfNotPresent
  image: ""
  tag: ""
  entrypoint: ""
  args: []

serviceAccounts: {}

roles: {}
access: []

pvc:
  claims: {}
  mounts: {}

volumes:
  config: {}
  secret: {}

deployment:
  replicaCount: 1
  revisionHistoryLimit: 1

  updateStrategy:
    type: RollingUpdate

  priorityClassName: ""
  affinity: {}
  podAffinityPreset: ""
  podAntiAffinityPreset: soft
  nodeAffinityPreset:
    type: ""
    key: ""
    values: []

  nodeSelector: {}
  tolerations: []
  resources:
    limits: {}
    requests: {}

  env: {}
  config: []
  secrets: []

  protocol: HTTP
  port: 80

  livenessProbe:
    endpoint: "/"
    failureThreshold: 1
    initialDelaySeconds: 60
    periodSeconds: 5
    successThreshold: 1
    timeoutSeconds: 3

  readinessProbe:
    endpoint: "/"
    failureThreshold: 1
    initialDelaySeconds: 90
    periodSeconds: 10
    successThreshold: 1
    timeoutSeconds: 3

autoscaling:
  minReplicas: 1
  maxReplicas: 4
  avgCpuUtilization: 70

service:
  type: ClusterIP
  protocol: http
  port: 80

ingress:
  className: ''
  hosts: []
  tls: []
